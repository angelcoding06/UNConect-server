version: '3.9'
services:
  unconnect_int:
    container_name: 'unconnect_int'
    networks:
      - backend-network
    build:
      context: ./soap_int/
    ports:
      - 8082:8082

  unconnect-ldap:
    image: osixia/openldap:1.1.8
    container_name: unconnect_ldap
    networks:
      - backend-network
    environment:
      COMPOSE_HTTP_TIMEOUT: 200
      LDAP_LOG_LEVEL: "256"
      LDAP_ORGANISATION: "unconnect"
      LDAP_DOMAIN: "unconnect.com"
      LDAP_BASE_DN: ""
      LDAP_ADMIN_PASSWORD: "admin"
      LDAP_CONFIG_PASSWORD: "config"
      LDAP_READONLY_USER: "false"
      #LDAP_READONLY_USER_USERNAME: "readonly"
      #LDAP_READONLY_USER_PASSWORD: "readonly"
      LDAP_BACKEND: "hdb"
      LDAP_TLS: "true"
      LDAP_TLS_CRT_FILENAME: "ldap.crt"
      LDAP_TLS_KEY_FILENAME: "ldap.key"
      LDAP_TLS_CA_CRT_FILENAME: "ca.crt"
      LDAP_TLS_ENFORCE: "false"
      LDAP_TLS_CIPHER_SUITE: "SECURE256:-VERS-SSL3.0"
      LDAP_TLS_PROTOCOL_MIN: "3.1"
      LDAP_TLS_VERIFY_CLIENT: "demand"
      LDAP_REPLICATION: "false"
      #LDAP_REPLICATION_CONFIG_SYNCPROV: "binddn="cn=admin,cn=config"bindmethod=simple credentials=$LDAP_CONFIG_PASSWORD searchbase="cn=config"type=refreshAndPersist retry="60 +" timeout=1 starttls=critical"
      #LDAP_REPLICATION_DB_SYNCPROV: "binddn="cn=admin,$LDAP_BASE_DN"bindmethod=simple credentials=$LDAP_ADMIN_PASSWORD searchbase="$LDAP_BASE_DN"type=refreshAndPersist interval=00:00:00:10 retry="60 +" timeout=1starttls=critical"
      #LDAP_REPLICATION_HOSTS:"#PYTHON2BASH:['ldap://ldap.example.org','ldap://ldap2.example.org']"
      LDAP_REMOVE_CONFIG_AFTER_SETUP: "false"
      LDAP_SSL_HELPER_PREFIX: "ldap"
    tty: true
    stdin_open: true
    volumes:
      - /var/lib/ldap
      - /etc/ldap/slapd.d
      - /container/service/slapd/assets/certs/
    ports:
      - "389:389"
      - "636:636"
    hostname: "unconnect.com"
  phpldapadmin:
    image: osixia/phpldapadmin:latest
    container_name: unconnect_ldap_client
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: "unconnect-ldap"
      PHPLDAPADMIN_HTTPS: "false"
    networks:
      - backend-network
    ports:
      - "8085:80"
    links:
      - unconnect-ldap
  unconnect_mq:
    image: 'rabbitmq:3-management'
    networks:
      - backend-network
    container_name: 'unconnect_mq'
    ports:
      - '5672:5672'
      - '15672:15672'

  unconnect_posts_ms:
    container_name: 'unconnect_posts_ms'
    networks:
      - backend-network
    build:
      context: ./post_ms/
    # ports:
    #   - ${SERVER_PORT}:${SERVER_PORT}
    #   - 3021:3021
    command: npm run start:debug
    env_file: ./post_ms/.env
    depends_on:
      - unconnect_posts_db
    links:
      - unconnect_posts_db

  unconnect_posts_db:
    image: mongo:latest
    container_name: 'unconnect_posts_db'
    networks:
      - backend-network
    volumes:
      - mongodb_data_container:/data/db
    env_file:
      - .env
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}

  unconnect_media_ms:
    container_name: 'unconnect_media_ms'
    networks:
      - backend-network
    build:
      context: ./media_ms/
    volumes:
      - ./media_ms/uploads:/usr/src/media_ms/uploads
    # ports:
    #   - ${SERVER_PORT_MEDIA}:${SERVER_PORT_MEDIA}
    #   - 3022:3022
    command: npm run start:debug
    env_file:
      - .env
    depends_on:
      - unconnect_media_db
    links:
      - unconnect_media_db

  unconnect_media_db:
    image: mongo:latest
    container_name: 'unconnect_media_db'
    networks:
      - backend-network
    volumes:
      - mongodb_data_container_media:/data/db
    env_file:
      - .env
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE_MEDIA}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME_MEDIA}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD_MEDIA}
    ports:
      - 27018:27017

  unconnect_auth_ms:
    container_name: unconnect_auth_ms
    networks:
      - backend-network
    image: unconnect_auth_ms_image
    build:
      context: ./auth_ms/auth-service/
    # ports:
    #   - 8081:8081
    environment:
      - SPRING_PROFILE = ${SPRING_PROFILE}
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - SPRING_RABBITMQ_HOST=unconnect_mq
      - LDAP_HOST=172.18.0.10
    depends_on:
      - unconnect_auth_db
      - unconnect_mq
    links:
      - unconnect_auth_db
    restart: on-failure

  unconnect_auth_db:
    container_name: unconnect_auth_db
    networks:
      - backend-network
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - mysql_data_container_auth:/var/lib/mysq

  unconnect_group_ms:
    container_name: 'unconnect_group_ms'
    networks:
      - backend-network
    build:
      context: ./group_ms/
    # ports:
    #   - 8001:8001
    volumes:
      - ./group_ms/db.sqlite3:/app/db.sqlite3
    environment:
      - DJANGO_SETTINGS_MODULE=group_ms.settings
      - PYTHONUNBUFFERED=1
    command: python manage.py runserver 0.0.0.0:8001

  unconnect_users_ms:
    container_name: 'unconnect_users_ms'
    networks:
      - backend-network
    build:
      context: ./user_ms/
    # ports:
    #   - 3003:3003
    command: ['/bin/bash', '-c', 'sleep 60 && npm start'] ## para que cargue la cola de mensajes.
    environment:
      - RABBITMQ_HOST=unconnect_mq
      - RABBITMQ_PORT=5672
    depends_on:
      - unconnect_auth_ms
      - unconnect_users_db
      - unconnect_mq

  unconnect_users_db:
    image: postgres:latest
    container_name: 'unconnect_users_db'
    networks:
      - backend-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: usersdb
    ports:
      - '5432:5432'

  unconnect_notification_ms:
    container_name: 'unconnect_notification_ms'
    networks:
      - backend-network
    build:
      context: ./notification_ms/
    # ports:
    #   - 8080:8080
    command: ./main
    env_file:
      - environment.env

  unconnect_ag:
    container_name: 'unconnect_ag'
    networks:
      - backend-network
    build:
      context: ./api_gateway/
    ports:
      - 8000:8000
    environment:
      PORT: 8000
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    links:
      - unconnect_users_ms
      - unconnect_group_ms
      - unconnect_posts_ms
      - unconnect_media_ms
      - unconnect_auth_ms
      - unconnect_notification_ms
      - unconnect_int
  unconnect_ag_rp:
    container_name: unconnect_ag_rp
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "81:81"
    networks:
      - backend-network
    depends_on:
      - unconnect_ag
      - unconnect_int
  unconnect_int_rp:
    container_name: unconnect_int_rp
    image: nginx:latest
    volumes:
      - ./int_rp/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "82:82"
    networks:
      - backend-network
    depends_on:
      - unconnect_ag
volumes:
  mongodb_data_container:
  mongodb_data_container_media:
  mysql_data_container_auth:
  postgres_data:

networks:
  backend-network:
    driver: bridge
